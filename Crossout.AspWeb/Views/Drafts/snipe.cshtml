@{
    Layout = "_Layout";
}

@using Crossout.AspWeb.Models.Drafts.Snipe
@model SnipeModel
@{ 
    var loc = Model.Localizations;
}

<partial name="header" model="@Model" />

<div class="half-hd-container px-3">

    @if (WebSettings.Settings.EnableAds)
    {
        <partial name="leaderboardad" />
    }

    <div class="card my-1">
        <h4 class="card-title m-2"><loc model="loc" category="sniper" name="title">Item Sniper</loc> <span data-toggle="collapse" data-target="#helpWrapper"><svg class="feather-help-circle"><use xlink:href="/icons/feather-sprite.svg#help-circle" /></svg></span></h4>

        <div id="helpWrapper" class="collapse">
            <h5 class="m-2"><loc model="loc" category="shared" name="title.howitworks">How it works</loc></h5>
            <p class="m-2"><loc model="loc" category="sniper" name="desc.howitworks.p1">This tool scans the recent 25 minutes of market data for large price changes. If an items sell price drops so much that it would be profitable to buy it for the new price and sell it afterwards for the old price, it gets listed here.</loc></p>
            <p class="m-2"><loc model="loc" category="sniper" name="desc.howitworks.p2">Keep in mind that these price drops can also be caused by a unusual price increase beforehand. Always double check before you decide to buy something!</loc></p>
            <ul class="list-unstyled m-2">
                <li><b><loc model="loc" category="shared" name="tablehead.item">Item</loc>:</b> <loc model="loc" category="sniper" name="desc.tablehead.item">The affected item</loc></li>
                <li><b><loc model="loc" category="sniper" name="tablehead.highestsell">Highest Sell Price</loc>:</b> <loc model="loc" category="sniper" name="desc.tablehead.highestsell">The highest recorded sell price of the last 25 minutes</loc></li>
                <li><b><loc model="loc" category="sniper" name="tablehead.currentsell">Current Sell Price</loc>:</b> <loc model="loc" category="sniper" name="desc.tablehead.currentsell">The current sell price</loc></li>
                <li><b><loc model="loc" category="sniper" name="tablehead.currentbuy">Current Buy Price</loc>:</b> <loc model="loc" category="sniper" name="desc.tablehead.currentbuy">The current buy price</loc></li>
                <li><b><loc model="loc" category="shared" name="tablehead.margin">Margin</loc>:</b> <loc model="loc" category="sniper" name="desc.tablehead.margin">The difference between "Highest Sell Price" and "Current Sell Price" minus market fee</loc></li>
                <li><b><loc model="loc" category="shared" name="tablehead.roi">ROI</loc>:</b> <loc model="loc" category="sniper" name="desc.tablehead.roi.p1">The</loc> <a href="https://en.wikipedia.org/wiki/Return_on_investment"><loc model="loc" category="sniper" name="desc.tablehead.roi.p2">Return on Investment</loc></a> <loc model="loc" category="sniper" name="desc.tablehead.roi.p3">based on "Margin" and "Current Sell Price"</loc></li>
            </ul>
        </div>


        <div class="m-2 d-flex flex-row">
            <div><loc model="Model.Localizations" category="sniper" name="label.datafrom">Data from</loc>: </div>
            <div class="ml-1 item-timestamp">@Model.FormatTimestamp</div>
        </div>

        <div class="custom-control custom-switch m-2">
            <input type="checkbox" class="custom-control-input" id="autoRefreshSwitch" checked>
            <label class="custom-control-label" for="autoRefreshSwitch"><loc model="loc" category="shared" name="label.autorefresh">Auto Refresh</loc></label>
        </div>

        <div class="m-2 d-flex flex-row">
            <div><loc model="loc" category="shared" name="label.refreshtimer">Seconds until Refresh</loc>: </div>
            <div id="countdown" class="ml-1"></div>
        </div>

        <div>
            <table class="table table-borderless table-hover dt-responsive" id="SniperTable">
                <thead>
                    <tr>
                        <th data-priority="1">
                            <loc model="loc" category="shared" name="tablehead.item">Item</loc>
                        </th>
                        <th data-priority="2">
                            <loc model="loc" category="sniper" name="tablehead.highestsell">Highest Sell Price</loc>
                        </th>
                        <th data-priority="2">
                            <loc model="loc" category="sniper" name="tablehead.currentsell">Current Sell Price</loc>
                        </th>
                        <th data-priority="2">
                            <loc model="loc" category="sniper" name="tablehead.currentbuy">Current Buy Price</loc>
                        </th>
                        <th data-priority="1">
                            <loc model="loc" category="shared" name="tablehead.margin">Margin</loc>
                        </th>
                        <th data-priority="1">
                            <loc model="loc" category="shared" name="tablehead.roi">ROI</loc>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var snipeItem in Model.SnipeItems)
                    {
                        if (snipeItem.Margin > 0)
                        {
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div>
                                            @if (snipeItem.ImageExists) //(RootPathHelper.ImageExists(Url,Model.Image))
                                            {
                                                <a href="~/item/@snipeItem.Id">
                                                    <img class="pull-left item-image-med lazy" style="margin-right: 8px;" src="~/icons/Spinner-1s-64px.svg" data-src="/img/items/@snipeItem.Image" />
                                                </a>
                                            }
                                            else
                                            {
                                                <a href="~/item/@snipeItem.Id">
                                                    <img class="pull-left item-image-med" style="margin-right: 8px;" src="~/img/NoImage.png" />
                                                </a>
                                            }
                                        </div>
                                        <a href="~/item/@snipeItem.Id">@snipeItem.AvailableName</a>
                                    </div>
                                </td>
                                <td>
                                    @snipeItem.HighEntry.FormatSellPrice <img height="14" src="/img/Coin.png" />
                                </td>
                                <td>
                                    @snipeItem.CurrentEntry.FormatSellPrice <img height="14" src="/img/Coin.png" />
                                </td>
                                <td>
                                    @snipeItem.CurrentEntry.FormatBuyPrice <img height="14" src="/img/Coin.png" />
                                </td>
                                <td>
                                    @snipeItem.FormatMargin <img height="14" src="/img/Coin.png" />
                                </td>
                                <td>
                                    @snipeItem.FromatROI%
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    var table = {};
    $(document).ready(function () {
        table = $('#SniperTable').DataTable({
            dom: '<tr>',
            order: [[4, 'desc']],
            searching: true,
            lengthChange: false,
            paging: false,
            info: false,
            autoWidth: false,
            responsive: {
                details: {
                    type: 'inline',
                    renderer: function (api, rowIdx, columns) {
                        var data = $.map(columns, function (col, i) {
                            return col.hidden ?
                                '<div class="d-inline-flex flex-column card p-1 px-2 m-2" data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '">' +
                                '<div class="font-weight-bold">' + col.title + '' + '</div> ' +
                                '<div>' + col.data + '</div>' +
                                '</div>' :
                                '';
                        }).join('');

                        return data ?
                            $('<div/>').append(data) :
                            false;
                    }
                }
            }
        });

        adjustTimeStamp();

        startAutoRefreshTimer();
    });

    var snipeTimestamp = '@Model.FormatTimestamp';
    var timer;
    var countdown;

    $('#autoRefreshSwitch').change(function () {
        if (this.checked)
            startAutoRefreshTimer();
        else
            cancelTimer();
    });

    function startAutoRefreshTimer() {
        timer = setTimeout(function () {
            location.reload();
        }, Math.max(calculateRemainingTime(), 10000));
        countdown = setInterval(function () {
            $('#countdown').text((calculateRemainingTime() / 1000).toFixed(0));
        }, 1000);
    }

    function cancelTimer() {
        clearTimeout(timer);
        clearInterval(countdown);
    }

    function calculateRemainingTime() {
        var nextRefresh = moment.utc(snipeTimestamp, 'YYYY-MM-DD HH:mm:ss').add(360, 'seconds');
        var diff = nextRefresh.diff(moment(), 'milliseconds');
        return diff;
    }
</script>